{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserRegisterBody": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"password",
					"email",
					"name"
				],
				"type": "object"
			},
			"Element": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"double": {
						"type": "string"
					},
					"triple": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"image": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"double",
					"triple",
					"description",
					"image"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Job": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"tier": {
						"type": "number",
						"format": "double"
					},
					"img": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"tier",
					"img"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Exp": {
				"properties": {
					"next": {
						"type": "number",
						"format": "double"
					},
					"current": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"next",
					"current"
				],
				"type": "object"
			},
			"Hunger": {
				"properties": {
					"max": {
						"type": "number",
						"format": "double"
					},
					"current": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"max",
					"current"
				],
				"type": "object"
			},
			"Attributes": {
				"properties": {
					"luck": {
						"type": "number",
						"format": "double"
					},
					"spirit": {
						"type": "number",
						"format": "double"
					},
					"vitality": {
						"type": "number",
						"format": "double"
					},
					"dexterity": {
						"type": "number",
						"format": "double"
					},
					"agility": {
						"type": "number",
						"format": "double"
					},
					"strength": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"luck",
					"spirit",
					"vitality",
					"dexterity",
					"agility",
					"strength"
				],
				"type": "object"
			},
			"FixedOperators": {
				"enum": [
					"SUM",
					"SUBTRACTION",
					"MULTIPLICATION",
					"DIVISION"
				],
				"type": "string"
			},
			"FixedEffect": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double"
					},
					"operator": {
						"$ref": "#/components/schemas/FixedOperators"
					},
					"field": {
						"type": "string"
					}
				},
				"required": [
					"value",
					"operator",
					"field"
				],
				"type": "object"
			},
			"PercentageOperators": {
				"enum": [
					"SUM",
					"SUBTRACTION"
				],
				"type": "string"
			},
			"PercentageEffect": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double"
					},
					"operator": {
						"$ref": "#/components/schemas/PercentageOperators"
					},
					"field": {
						"type": "string"
					}
				},
				"required": [
					"value",
					"operator",
					"field"
				],
				"type": "object"
			},
			"Character": {
				"properties": {
					"id": {
						"type": "string"
					},
					"ownerId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"guild": {
						"type": "string"
					},
					"elements": {
						"items": {
							"$ref": "#/components/schemas/Element"
						},
						"type": "array"
					},
					"jobs": {
						"items": {
							"$ref": "#/components/schemas/Job"
						},
						"type": "array"
					},
					"level": {
						"type": "number",
						"format": "double"
					},
					"exp": {
						"$ref": "#/components/schemas/Exp"
					},
					"jp": {
						"type": "number",
						"format": "double"
					},
					"enhancements": {
						"type": "number",
						"format": "double"
					},
					"skillRegen": {
						"type": "number",
						"format": "double"
					},
					"hunger": {
						"$ref": "#/components/schemas/Hunger"
					},
					"gold": {
						"type": "number",
						"format": "double"
					},
					"attributes": {
						"$ref": "#/components/schemas/Attributes"
					},
					"fixedEffects": {
						"items": {
							"$ref": "#/components/schemas/FixedEffect"
						},
						"type": "array"
					},
					"percentageEffects": {
						"items": {
							"$ref": "#/components/schemas/PercentageEffect"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"ownerId",
					"name",
					"guild",
					"elements",
					"jobs",
					"level",
					"exp",
					"jp",
					"enhancements",
					"skillRegen",
					"hunger",
					"gold",
					"attributes",
					"fixedEffects",
					"percentageEffects"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Pick_Character.ownerId-or-name__": {
				"properties": {
					"ownerId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"CharacterCreateBody": {
				"$ref": "#/components/schemas/Partial_Pick_Character.ownerId-or-name__"
			},
			"Partial_Omit_Character.id-or-ownerId__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"guild": {
						"type": "string"
					},
					"elements": {
						"items": {
							"$ref": "#/components/schemas/Element"
						},
						"type": "array"
					},
					"jobs": {
						"items": {
							"$ref": "#/components/schemas/Job"
						},
						"type": "array"
					},
					"level": {
						"type": "number",
						"format": "double"
					},
					"exp": {
						"$ref": "#/components/schemas/Exp"
					},
					"jp": {
						"type": "number",
						"format": "double"
					},
					"enhancements": {
						"type": "number",
						"format": "double"
					},
					"skillRegen": {
						"type": "number",
						"format": "double"
					},
					"hunger": {
						"$ref": "#/components/schemas/Hunger"
					},
					"gold": {
						"type": "number",
						"format": "double"
					},
					"attributes": {
						"$ref": "#/components/schemas/Attributes"
					},
					"fixedEffects": {
						"items": {
							"$ref": "#/components/schemas/FixedEffect"
						},
						"type": "array"
					},
					"percentageEffects": {
						"items": {
							"$ref": "#/components/schemas/PercentageEffect"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"CharacterUpdateBody": {
				"$ref": "#/components/schemas/Partial_Omit_Character.id-or-ownerId__"
			},
			"Partial_Omit_Element.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"double": {
						"type": "string"
					},
					"triple": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"image": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ElementCreateBody": {
				"$ref": "#/components/schemas/Partial_Omit_Element.id__"
			},
			"ElementUpdateBody": {
				"$ref": "#/components/schemas/Partial_Omit_Element.id__"
			},
			"Partial_Omit_Job.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"tier": {
						"type": "number",
						"format": "double"
					},
					"img": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"JobUpdateBody": {
				"$ref": "#/components/schemas/Partial_Omit_Job.id__"
			},
			"LocationTypes": {
				"enum": [
					"CONTINENT",
					"REALM",
					"CITY",
					"VILLAGE"
				],
				"type": "string"
			},
			"Location": {
				"properties": {
					"id": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/LocationTypes"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"img": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"type",
					"name",
					"description",
					"img"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Omit_Location.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"img": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/LocationTypes"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"LocationUpdateBody": {
				"$ref": "#/components/schemas/Partial_Omit_Location.id__"
			},
			"Npc": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"img": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"description",
					"img"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Omit_Npc.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"img": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"NpcUpdateBody": {
				"$ref": "#/components/schemas/Partial_Omit_Npc.id__"
			},
			"UserRoles": {
				"enum": [
					"PLAYER",
					"MASTER"
				],
				"type": "string"
			},
			"User": {
				"properties": {
					"id": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/UserRoles"
					},
					"name": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"role",
					"name",
					"picture"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_Omit_User.id-or-role__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"picture": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"UserUpdateBody": {
				"$ref": "#/components/schemas/Partial_Omit_User.id-or-role__"
			}
		},
		"securitySchemes": {
			"bearer": {
				"type": "http",
				"scheme": "bearer"
			}
		}
	},
	"info": {
		"title": "pandora-gate-rpg-helper",
		"version": "0.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/register": {
			"post": {
				"operationId": "UserRegister",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Authentication Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserRegisterBody"
							}
						}
					}
				}
			}
		},
		"/characters/users/{userId}": {
			"get": {
				"operationId": "GetCharactersByUserId",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Character"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Characters Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/characters/{characterId}": {
			"get": {
				"operationId": "GetCharacterById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Character"
								}
							}
						}
					}
				},
				"tags": [
					"Characters Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "characterId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateCharacter",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Character"
								}
							}
						}
					}
				},
				"tags": [
					"Characters Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "characterId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CharacterUpdateBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteCharacter",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Characters Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "characterId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/characters": {
			"post": {
				"operationId": "CreateCharacter",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Character"
								}
							}
						}
					}
				},
				"tags": [
					"Characters Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CharacterCreateBody"
							}
						}
					}
				}
			}
		},
		"/elements": {
			"get": {
				"operationId": "GetAllElements",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Element"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Elements Service"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateElement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Element"
								}
							}
						}
					}
				},
				"tags": [
					"Elements Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ElementCreateBody"
							}
						}
					}
				}
			}
		},
		"/elements/{elementId}": {
			"get": {
				"operationId": "GetElementById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Element"
								}
							}
						}
					}
				},
				"tags": [
					"Elements Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "elementId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateElement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Element"
								}
							}
						}
					}
				},
				"tags": [
					"Elements Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "elementId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ElementUpdateBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteElement",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Elements Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "elementId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/jobs/{jobId}": {
			"get": {
				"operationId": "GetJobById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Job"
								}
							}
						}
					}
				},
				"tags": [
					"Jobs Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateJob",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Jobs Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JobUpdateBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteJob",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Jobs Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "jobId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/jobs": {
			"post": {
				"operationId": "CreateJob",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Jobs Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Job"
							}
						}
					}
				}
			}
		},
		"/locations/{locationId}": {
			"get": {
				"operationId": "GetLocationById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Location"
								}
							}
						}
					}
				},
				"tags": [
					"Locations Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateLocation",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Locations Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LocationUpdateBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteLocation",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Locations Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "locationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/locations": {
			"post": {
				"operationId": "CreateLocation",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Locations Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Location"
							}
						}
					}
				}
			}
		},
		"/npcs/{npcId}": {
			"get": {
				"operationId": "GetNpcById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Npc"
								}
							}
						}
					}
				},
				"tags": [
					"Npcs Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "npcId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateNpc",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Npcs Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "npcId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NpcUpdateBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteNpc",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Npcs Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "npcId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/npcs": {
			"post": {
				"operationId": "CreateNpc",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Npcs Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Npc"
							}
						}
					}
				}
			}
		},
		"/users/{userId}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Users Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Users Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdateBody"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Users Service"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"tags": [
					"Users Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}